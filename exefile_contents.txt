
./hello:     file format elf32-i386


Disassembly of section .init:

080482b4 <_init>:
 80482b4:	55                   	push   %ebp
 80482b5:	89 e5                	mov    %esp,%ebp
 80482b7:	53                   	push   %ebx
 80482b8:	83 ec 04             	sub    $0x4,%esp
 80482bb:	e8 00 00 00 00       	call   80482c0 <_init+0xc>
 80482c0:	5b                   	pop    %ebx
 80482c1:	81 c3 4c 14 00 00    	add    $0x144c,%ebx
 80482c7:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 80482cd:	85 d2                	test   %edx,%edx
 80482cf:	74 05                	je     80482d6 <_init+0x22>
 80482d1:	e8 1e 00 00 00       	call   80482f4 <__gmon_start__@plt>
 80482d6:	e8 f5 00 00 00       	call   80483d0 <frame_dummy>
 80482db:	e8 10 02 00 00       	call   80484f0 <__do_global_ctors_aux>
 80482e0:	58                   	pop    %eax
 80482e1:	5b                   	pop    %ebx
 80482e2:	c9                   	leave  
 80482e3:	c3                   	ret    

Disassembly of section .plt:

080482e4 <__gmon_start__@plt-0x10>:
 80482e4:	ff 35 10 97 04 08    	pushl  0x8049710
 80482ea:	ff 25 14 97 04 08    	jmp    *0x8049714
 80482f0:	00 00                	add    %al,(%eax)
	...

080482f4 <__gmon_start__@plt>:
 80482f4:	ff 25 18 97 04 08    	jmp    *0x8049718
 80482fa:	68 00 00 00 00       	push   $0x0
 80482ff:	e9 e0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048304 <__libc_start_main@plt>:
 8048304:	ff 25 1c 97 04 08    	jmp    *0x804971c
 804830a:	68 08 00 00 00       	push   $0x8
 804830f:	e9 d0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048314 <printf@plt>:
 8048314:	ff 25 20 97 04 08    	jmp    *0x8049720
 804831a:	68 10 00 00 00       	push   $0x10
 804831f:	e9 c0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048324 <puts@plt>:
 8048324:	ff 25 24 97 04 08    	jmp    *0x8049724
 804832a:	68 18 00 00 00       	push   $0x18
 804832f:	e9 b0 ff ff ff       	jmp    80482e4 <_init+0x30>

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    %ebp,%ebp
 8048342:	5e                   	pop    %esi
 8048343:	89 e1                	mov    %esp,%ecx
 8048345:	83 e4 f0             	and    $0xfffffff0,%esp
 8048348:	50                   	push   %eax
 8048349:	54                   	push   %esp
 804834a:	52                   	push   %edx
 804834b:	68 80 84 04 08       	push   $0x8048480
 8048350:	68 90 84 04 08       	push   $0x8048490
 8048355:	51                   	push   %ecx
 8048356:	56                   	push   %esi
 8048357:	68 f4 83 04 08       	push   $0x80483f4
 804835c:	e8 a3 ff ff ff       	call   8048304 <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	90                   	nop
 8048363:	90                   	nop
 8048364:	90                   	nop
 8048365:	90                   	nop
 8048366:	90                   	nop
 8048367:	90                   	nop
 8048368:	90                   	nop
 8048369:	90                   	nop
 804836a:	90                   	nop
 804836b:	90                   	nop
 804836c:	90                   	nop
 804836d:	90                   	nop
 804836e:	90                   	nop
 804836f:	90                   	nop

08048370 <__do_global_dtors_aux>:
 8048370:	55                   	push   %ebp
 8048371:	89 e5                	mov    %esp,%ebp
 8048373:	53                   	push   %ebx
 8048374:	83 ec 04             	sub    $0x4,%esp
 8048377:	80 3d 2c 97 04 08 00 	cmpb   $0x0,0x804972c
 804837e:	75 3f                	jne    80483bf <__do_global_dtors_aux+0x4f>
 8048380:	a1 30 97 04 08       	mov    0x8049730,%eax
 8048385:	bb 38 96 04 08       	mov    $0x8049638,%ebx
 804838a:	81 eb 34 96 04 08    	sub    $0x8049634,%ebx
 8048390:	c1 fb 02             	sar    $0x2,%ebx
 8048393:	83 eb 01             	sub    $0x1,%ebx
 8048396:	39 d8                	cmp    %ebx,%eax
 8048398:	73 1e                	jae    80483b8 <__do_global_dtors_aux+0x48>
 804839a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483a0:	83 c0 01             	add    $0x1,%eax
 80483a3:	a3 30 97 04 08       	mov    %eax,0x8049730
 80483a8:	ff 14 85 34 96 04 08 	call   *0x8049634(,%eax,4)
 80483af:	a1 30 97 04 08       	mov    0x8049730,%eax
 80483b4:	39 d8                	cmp    %ebx,%eax
 80483b6:	72 e8                	jb     80483a0 <__do_global_dtors_aux+0x30>
 80483b8:	c6 05 2c 97 04 08 01 	movb   $0x1,0x804972c
 80483bf:	83 c4 04             	add    $0x4,%esp
 80483c2:	5b                   	pop    %ebx
 80483c3:	5d                   	pop    %ebp
 80483c4:	c3                   	ret    
 80483c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483d0 <frame_dummy>:
 80483d0:	55                   	push   %ebp
 80483d1:	89 e5                	mov    %esp,%ebp
 80483d3:	83 ec 18             	sub    $0x18,%esp
 80483d6:	a1 3c 96 04 08       	mov    0x804963c,%eax
 80483db:	85 c0                	test   %eax,%eax
 80483dd:	74 12                	je     80483f1 <frame_dummy+0x21>
 80483df:	b8 00 00 00 00       	mov    $0x0,%eax
 80483e4:	85 c0                	test   %eax,%eax
 80483e6:	74 09                	je     80483f1 <frame_dummy+0x21>
 80483e8:	c7 04 24 3c 96 04 08 	movl   $0x804963c,(%esp)
 80483ef:	ff d0                	call   *%eax
 80483f1:	c9                   	leave  
 80483f2:	c3                   	ret    
 80483f3:	90                   	nop

080483f4 <main>:
 80483f4:	55                   	push   %ebp
 80483f5:	89 e5                	mov    %esp,%ebp
 80483f7:	83 e4 f0             	and    $0xfffffff0,%esp
 80483fa:	83 ec 20             	sub    $0x20,%esp
 80483fd:	c7 04 24 44 85 04 08 	movl   $0x8048544,(%esp)
 8048404:	e8 1b ff ff ff       	call   8048324 <puts@plt>
 8048409:	c7 44 24 18 14 00 00 	movl   $0x14,0x18(%esp)
 8048410:	00 
 8048411:	c6 44 24 11 41       	movb   $0x41,0x11(%esp)
 8048416:	c6 44 24 12 6d       	movb   $0x6d,0x12(%esp)
 804841b:	c6 44 24 13 61       	movb   $0x61,0x13(%esp)
 8048420:	c6 44 24 14 72       	movb   $0x72,0x14(%esp)
 8048425:	c6 44 24 15 61       	movb   $0x61,0x15(%esp)
 804842a:	c6 44 24 16 68       	movb   $0x68,0x16(%esp)
 804842f:	c6 44 24 17 00       	movb   $0x0,0x17(%esp)
 8048434:	c6 44 24 1f 51       	movb   $0x51,0x1f(%esp)
 8048439:	b8 51 85 04 08       	mov    $0x8048551,%eax
 804843e:	8d 54 24 11          	lea    0x11(%esp),%edx
 8048442:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048446:	89 04 24             	mov    %eax,(%esp)
 8048449:	e8 c6 fe ff ff       	call   8048314 <printf@plt>
 804844e:	b8 60 85 04 08       	mov    $0x8048560,%eax
 8048453:	8b 54 24 18          	mov    0x18(%esp),%edx
 8048457:	89 54 24 04          	mov    %edx,0x4(%esp)
 804845b:	89 04 24             	mov    %eax,(%esp)
 804845e:	e8 b1 fe ff ff       	call   8048314 <printf@plt>
 8048463:	0f be 54 24 1f       	movsbl 0x1f(%esp),%edx
 8048468:	b8 6e 85 04 08       	mov    $0x804856e,%eax
 804846d:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048471:	89 04 24             	mov    %eax,(%esp)
 8048474:	e8 9b fe ff ff       	call   8048314 <printf@plt>
 8048479:	b8 00 00 00 00       	mov    $0x0,%eax
 804847e:	c9                   	leave  
 804847f:	c3                   	ret    

08048480 <__libc_csu_fini>:
 8048480:	55                   	push   %ebp
 8048481:	89 e5                	mov    %esp,%ebp
 8048483:	5d                   	pop    %ebp
 8048484:	c3                   	ret    
 8048485:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%eax,%eax,1)
 804848c:	00 00 00 00 

08048490 <__libc_csu_init>:
 8048490:	55                   	push   %ebp
 8048491:	89 e5                	mov    %esp,%ebp
 8048493:	57                   	push   %edi
 8048494:	56                   	push   %esi
 8048495:	53                   	push   %ebx
 8048496:	e8 4f 00 00 00       	call   80484ea <__i686.get_pc_thunk.bx>
 804849b:	81 c3 71 12 00 00    	add    $0x1271,%ebx
 80484a1:	83 ec 1c             	sub    $0x1c,%esp
 80484a4:	e8 0b fe ff ff       	call   80482b4 <_init>
 80484a9:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80484af:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80484b5:	29 c7                	sub    %eax,%edi
 80484b7:	c1 ff 02             	sar    $0x2,%edi
 80484ba:	85 ff                	test   %edi,%edi
 80484bc:	74 24                	je     80484e2 <__libc_csu_init+0x52>
 80484be:	31 f6                	xor    %esi,%esi
 80484c0:	8b 45 10             	mov    0x10(%ebp),%eax
 80484c3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484c7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484ca:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484ce:	8b 45 08             	mov    0x8(%ebp),%eax
 80484d1:	89 04 24             	mov    %eax,(%esp)
 80484d4:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 80484db:	83 c6 01             	add    $0x1,%esi
 80484de:	39 fe                	cmp    %edi,%esi
 80484e0:	72 de                	jb     80484c0 <__libc_csu_init+0x30>
 80484e2:	83 c4 1c             	add    $0x1c,%esp
 80484e5:	5b                   	pop    %ebx
 80484e6:	5e                   	pop    %esi
 80484e7:	5f                   	pop    %edi
 80484e8:	5d                   	pop    %ebp
 80484e9:	c3                   	ret    

080484ea <__i686.get_pc_thunk.bx>:
 80484ea:	8b 1c 24             	mov    (%esp),%ebx
 80484ed:	c3                   	ret    
 80484ee:	90                   	nop
 80484ef:	90                   	nop

080484f0 <__do_global_ctors_aux>:
 80484f0:	55                   	push   %ebp
 80484f1:	89 e5                	mov    %esp,%ebp
 80484f3:	53                   	push   %ebx
 80484f4:	83 ec 04             	sub    $0x4,%esp
 80484f7:	a1 2c 96 04 08       	mov    0x804962c,%eax
 80484fc:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484ff:	74 13                	je     8048514 <__do_global_ctors_aux+0x24>
 8048501:	bb 2c 96 04 08       	mov    $0x804962c,%ebx
 8048506:	66 90                	xchg   %ax,%ax
 8048508:	83 eb 04             	sub    $0x4,%ebx
 804850b:	ff d0                	call   *%eax
 804850d:	8b 03                	mov    (%ebx),%eax
 804850f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048512:	75 f4                	jne    8048508 <__do_global_ctors_aux+0x18>
 8048514:	83 c4 04             	add    $0x4,%esp
 8048517:	5b                   	pop    %ebx
 8048518:	5d                   	pop    %ebp
 8048519:	c3                   	ret    
 804851a:	90                   	nop
 804851b:	90                   	nop

Disassembly of section .fini:

0804851c <_fini>:
 804851c:	55                   	push   %ebp
 804851d:	89 e5                	mov    %esp,%ebp
 804851f:	53                   	push   %ebx
 8048520:	83 ec 04             	sub    $0x4,%esp
 8048523:	e8 00 00 00 00       	call   8048528 <_fini+0xc>
 8048528:	5b                   	pop    %ebx
 8048529:	81 c3 e4 11 00 00    	add    $0x11e4,%ebx
 804852f:	e8 3c fe ff ff       	call   8048370 <__do_global_dtors_aux>
 8048534:	59                   	pop    %ecx
 8048535:	5b                   	pop    %ebx
 8048536:	c9                   	leave  
 8048537:	c3                   	ret    
